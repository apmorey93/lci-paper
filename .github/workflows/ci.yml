name: LCI Auto Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Generate demo results (tables/figures)
        run: |
          set -e
          mkdir -p results/tables results/figures data/interim
          # Try your generator; don't fail CI if it's just a demo
          python src/lci_program.py || true

          python - <<'PY'
          import pandas as pd, os
          os.makedirs('results/tables', exist_ok=True)
          # Minimal CSVs the rest of the pipeline expects
          pd.DataFrame([{'family':'QA','LCI':0.123},{'family':'Code','LCI':0.234}]).to_csv('results/tables/lci_by_family.csv', index=False)
          pd.DataFrame([{'t':0,'IPD':1.00},{'t':1,'IPD':0.97}]).to_csv('results/tables/ipd.csv', index=False)
          print("Wrote results/tables/{lci_by_family.csv, ipd.csv}")
          PY

          ls -al results/tables || true
          ls -al results/figures || true

      - name: Build paper (optional)
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends texlive-latex-extra texlive-fonts-recommended texlive-science latexmk
          if [ -f paper/main.tex ]; then
            (cd paper && latexmk -pdf -halt-on-error -interaction=nonstopmode main.tex)
            ls -al paper/*.pdf
          else
            echo "No paper/main.tex found; skipping TeX build."
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lci-results
          path: |
            results/**
            paper/*.pdf
          if-no-files-found: warn